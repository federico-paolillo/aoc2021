import unittest

from aoc2021.day_three import part_one, part_two

_PUZZLE_READINGS = [
    0b000011001000,
    0b001111100100,
    0b110101011111,
    0b010100001101,
    0b110001001000,
    0b010000110100,
    0b010011010010,
    0b110101000011,
    0b100111001001,
    0b001101110011,
    0b001101011010,
    0b000010111000,
    0b111001101010,
    0b001010011011,
    0b000101101100,
    0b010011011101,
    0b111100101001,
    0b110110100011,
    0b001100000110,
    0b111010110110,
    0b110110011100,
    0b110000011111,
    0b010101111110,
    0b011001111010,
    0b110101100111,
    0b101111010011,
    0b001111000011,
    0b001110011100,
    0b000011001001,
    0b100101101100,
    0b010110000101,
    0b000001110001,
    0b000100011101,
    0b011110001101,
    0b000111000110,
    0b000111011001,
    0b110111110100,
    0b101110010000,
    0b111010000000,
    0b000111001001,
    0b010101010001,
    0b111100100000,
    0b100000000101,
    0b100111010111,
    0b000111110110,
    0b000000101010,
    0b010010001011,
    0b000100100000,
    0b111101011100,
    0b001100110000,
    0b001101010100,
    0b001011100101,
    0b010011000101,
    0b000001000101,
    0b010101110110,
    0b101110101101,
    0b011011110011,
    0b110101111101,
    0b110101011000,
    0b001001110100,
    0b001001110111,
    0b110100100100,
    0b110110110111,
    0b111001001100,
    0b010101101010,
    0b010101110010,
    0b110100011101,
    0b011111100110,
    0b001011010011,
    0b010100010100,
    0b010111101000,
    0b111000000101,
    0b110101110101,
    0b111010111111,
    0b101000110011,
    0b011111000011,
    0b001011010100,
    0b000001101001,
    0b011110010010,
    0b000001100111,
    0b111010110010,
    0b000111100110,
    0b010001000101,
    0b101010100001,
    0b110011000101,
    0b010101010110,
    0b111110111000,
    0b000100110001,
    0b100011100111,
    0b000110011010,
    0b001110100111,
    0b110001111000,
    0b101000010111,
    0b110000010011,
    0b111101111011,
    0b010001011010,
    0b011110000111,
    0b010011101100,
    0b011101010010,
    0b100111110011,
    0b100010100010,
    0b010000011100,
    0b001111010011,
    0b111000111111,
    0b000100111100,
    0b001100101110,
    0b001000011110,
    0b001101101000,
    0b100101000011,
    0b011001010011,
    0b111001100101,
    0b111110011111,
    0b011010111010,
    0b001100101101,
    0b111100110011,
    0b111001000100,
    0b100111111101,
    0b101101101111,
    0b110011100111,
    0b010000111101,
    0b001100111101,
    0b011110101000,
    0b001110010001,
    0b011010001110,
    0b110110110010,
    0b001010111101,
    0b110110011110,
    0b011110111111,
    0b001000011010,
    0b001011000010,
    0b110011111001,
    0b010110110000,
    0b101011111111,
    0b110100111001,
    0b100110000011,
    0b101010011100,
    0b011100011100,
    0b101011001011,
    0b001010100011,
    0b001110100011,
    0b000100000001,
    0b111011101000,
    0b000010011111,
    0b010101101110,
    0b001101010110,
    0b110100101101,
    0b101101010001,
    0b100110010111,
    0b100101010010,
    0b011000101101,
    0b010001100000,
    0b110100110010,
    0b001011101001,
    0b110100111000,
    0b111000111000,
    0b100011001001,
    0b011010100110,
    0b001110011110,
    0b101011110001,
    0b000100101010,
    0b001111101001,
    0b111011101010,
    0b001001010000,
    0b111000011000,
    0b001110100110,
    0b001111011100,
    0b000000111111,
    0b000100110111,
    0b010010111101,
    0b100011000110,
    0b001110011011,
    0b001011011000,
    0b000100101110,
    0b100001010100,
    0b110101010111,
    0b110110101011,
    0b111110011100,
    0b100001111101,
    0b001001001010,
    0b100101111001,
    0b101111010101,
    0b100110110000,
    0b101110010110,
    0b101000000111,
    0b100000110001,
    0b001111110100,
    0b011111010101,
    0b010100110111,
    0b010110101110,
    0b100001010010,
    0b101011100110,
    0b100001001010,
    0b001110101000,
    0b100010110010,
    0b100101100011,
    0b111000000010,
    0b101110110110,
    0b011110001011,
    0b101101111000,
    0b001111001000,
    0b010111000101,
    0b111111111100,
    0b000000011010,
    0b001000010110,
    0b111110000110,
    0b110001110010,
    0b101110001000,
    0b010100011110,
    0b111110001001,
    0b010111111100,
    0b111100100001,
    0b001000010101,
    0b010000001011,
    0b011000101000,
    0b001000010011,
    0b111100000111,
    0b100110101010,
    0b011001011111,
    0b101110100111,
    0b111011100010,
    0b010111110100,
    0b010111110110,
    0b111010101001,
    0b100110100111,
    0b100000001000,
    0b111001110100,
    0b000010101011,
    0b101000001111,
    0b001000011111,
    0b000010010000,
    0b110010000001,
    0b111110111010,
    0b111100101010,
    0b101000100111,
    0b110101011110,
    0b000010001010,
    0b100101111000,
    0b011001000011,
    0b101001000011,
    0b010101001000,
    0b111111101000,
    0b101001001101,
    0b010101000101,
    0b010010011100,
    0b011011011100,
    0b100010001111,
    0b100000000100,
    0b101111101001,
    0b011110001110,
    0b010110011000,
    0b111110110101,
    0b010101000010,
    0b001100110011,
    0b111110100001,
    0b110110111100,
    0b110101011101,
    0b100010111111,
    0b101111000111,
    0b001100011000,
    0b011001001110,
    0b101110111111,
    0b010110111100,
    0b111000001100,
    0b000001111110,
    0b101001011010,
    0b000001101100,
    0b110111111110,
    0b101010000101,
    0b010101001100,
    0b011101111001,
    0b110101100001,
    0b111000010110,
    0b100001101101,
    0b000000011110,
    0b011101001011,
    0b011111111000,
    0b011001001100,
    0b010011001100,
    0b001111010000,
    0b111111000001,
    0b010000010000,
    0b010000101001,
    0b111001110111,
    0b100100000101,
    0b100011010011,
    0b110111100010,
    0b111100110001,
    0b000000111000,
    0b000101101101,
    0b101110001010,
    0b011101111100,
    0b110000100101,
    0b010010111001,
    0b011011010111,
    0b011111101001,
    0b010001100001,
    0b110011100011,
    0b111010110011,
    0b011000101001,
    0b000011101001,
    0b001000110111,
    0b011010010001,
    0b101111111111,
    0b110011110101,
    0b000000100000,
    0b101111110010,
    0b011100010001,
    0b000001100001,
    0b000010000001,
    0b110110000100,
    0b011011001101,
    0b101001011111,
    0b000111100101,
    0b110101111010,
    0b100101100100,
    0b100001110111,
    0b101110001001,
    0b110110010110,
    0b111000000011,
    0b001101110010,
    0b010000001000,
    0b101001010101,
    0b000101111000,
    0b110011101110,
    0b010010001000,
    0b110010010000,
    0b011001110111,
    0b000010110000,
    0b000110100101,
    0b000101101001,
    0b000110101110,
    0b011101100001,
    0b100111110010,
    0b010100111001,
    0b110111111100,
    0b110110000001,
    0b001011000100,
    0b101010101010,
    0b011100000001,
    0b100001001000,
    0b010110110110,
    0b011000100001,
    0b100001001100,
    0b010000110000,
    0b111111101100,
    0b000101101110,
    0b111010101010,
    0b101001111100,
    0b010011100001,
    0b001011001001,
    0b100111110110,
    0b010111001000,
    0b101110000101,
    0b110110001110,
    0b010000000101,
    0b110010010110,
    0b011100100011,
    0b001111101000,
    0b111111011001,
    0b010100100010,
    0b001111000110,
    0b001110000110,
    0b110101010001,
    0b001100011100,
    0b010001101101,
    0b011110010100,
    0b110000101101,
    0b011110011110,
    0b110101001100,
    0b101011101000,
    0b101000001100,
    0b101000000010,
    0b011010100100,
    0b110000000101,
    0b000010001001,
    0b111010010110,
    0b000110110010,
    0b101000111001,
    0b101001011000,
    0b010111011111,
    0b000110111101,
    0b000100011001,
    0b010101110100,
    0b101010010111,
    0b001010100111,
    0b111010101101,
    0b101011011101,
    0b010011101110,
    0b000111111000,
    0b111000111011,
    0b011101110100,
    0b100100111110,
    0b011100000101,
    0b100011111010,
    0b010010010000,
    0b001011101111,
    0b110011001011,
    0b100011111100,
    0b000010011101,
    0b110010000000,
    0b001011010110,
    0b010110111110,
    0b101011010101,
    0b011111111111,
    0b001011001011,
    0b010101011001,
    0b110011110100,
    0b111001001111,
    0b111001110110,
    0b001000000111,
    0b111011111110,
    0b100100100111,
    0b110001110101,
    0b011001111110,
    0b001101000100,
    0b101011000100,
    0b110111101000,
    0b100100001100,
    0b011001011010,
    0b001000010001,
    0b011001111011,
    0b111010011000,
    0b111001001110,
    0b111100010000,
    0b111101100001,
    0b001000111110,
    0b011111001100,
    0b101001111001,
    0b010010000110,
    0b001010000011,
    0b100011100000,
    0b111101110110,
    0b100111010001,
    0b111000011111,
    0b100100010110,
    0b010100000101,
    0b101110001011,
    0b101100100011,
    0b010000101010,
    0b110110101001,
    0b010110100101,
    0b100000110111,
    0b010010000010,
    0b101000010001,
    0b110001111101,
    0b011001011100,
    0b011111100011,
    0b010100100000,
    0b001110011101,
    0b100011010001,
    0b000111010101,
    0b001111000100,
    0b001111101011,
    0b001001011101,
    0b110110101100,
    0b011101111010,
    0b011110001000,
    0b000111001100,
    0b010100111000,
    0b100100110000,
    0b110100001111,
    0b010010010110,
    0b110111101011,
    0b111011011001,
    0b011001101010,
    0b011011001010,
    0b111001101100,
    0b000011110001,
    0b111111001011,
    0b110111100110,
    0b110111110011,
    0b101010111011,
    0b111010110111,
    0b000100000010,
    0b110011011110,
    0b101010111101,
    0b000110111000,
    0b111011011111,
    0b010001110110,
    0b000011000100,
    0b100001010101,
    0b000111001101,
    0b111011000011,
    0b001110110000,
    0b110101111011,
    0b011011010100,
    0b001100100000,
    0b100011101001,
    0b010101100110,
    0b001101000000,
    0b011110100001,
    0b000110110011,
    0b000000000100,
    0b110110111010,
    0b000100001101,
    0b110101111000,
    0b010100101011,
    0b000011011011,
    0b011011100001,
    0b011011001100,
    0b000101111100,
    0b101010011110,
    0b011111100000,
    0b100011000101,
    0b010111101110,
    0b100000110101,
    0b001101111100,
    0b010111100010,
    0b011000000001,
    0b101001101111,
    0b001011000001,
    0b111000110101,
    0b000000110100,
    0b100001110001,
    0b001000101100,
    0b001011101100,
    0b110010101000,
    0b010011001011,
    0b001111011000,
    0b110001100100,
    0b110010100001,
    0b100101010100,
    0b010000101100,
    0b111010101111,
    0b000010000100,
    0b000101000010,
    0b110000101110,
    0b010001000110,
    0b110001011100,
    0b101000111101,
    0b111011111100,
    0b011100101111,
    0b010111100111,
    0b110111011001,
    0b010100000000,
    0b010100101101,
    0b101010111001,
    0b001010100001,
    0b011010010011,
    0b111011100101,
    0b010110110101,
    0b110010101100,
    0b000101010111,
    0b100010001110,
    0b100111101100,
    0b001000100001,
    0b110111110001,
    0b101100011100,
    0b100101101001,
    0b110010101111,
    0b000010001100,
    0b011111110010,
    0b011111011011,
    0b110101010010,
    0b001110101100,
    0b101111101100,
    0b101001101001,
    0b011010101010,
    0b111110100111,
    0b000110001111,
    0b100110110100,
    0b111011100100,
    0b100100101001,
    0b000011101100,
    0b100001000011,
    0b101100001011,
    0b000101011011,
    0b110001010000,
    0b111111011110,
    0b000100110100,
    0b011110110010,
    0b101111100111,
    0b010010110100,
    0b001001000001,
    0b111101101111,
    0b000010010001,
    0b001011001100,
    0b110110010000,
    0b101000100110,
    0b111100001010,
    0b011010101101,
    0b011101101110,
    0b010101000110,
    0b100110011110,
    0b011001000100,
    0b101111111010,
    0b011001101000,
    0b001010100100,
    0b000101111101,
    0b111010110001,
    0b001100111110,
    0b100000100000,
    0b101011101011,
    0b011101011110,
    0b110011111101,
    0b001111000111,
    0b101110111011,
    0b001110111011,
    0b001010100101,
    0b111011110111,
    0b011011000100,
    0b111000001101,
    0b111110011101,
    0b101001001000,
    0b111110001011,
    0b100000000110,
    0b011100010101,
    0b000111101001,
    0b110101001000,
    0b011000000011,
    0b100000001001,
    0b111010000100,
    0b111110010111,
    0b110000010001,
    0b100001000110,
    0b000100000000,
    0b101000100010,
    0b011011010011,
    0b001000111000,
    0b001101101010,
    0b000010010100,
    0b100101111100,
    0b101110110101,
    0b101110100010,
    0b010100000010,
    0b011110001001,
    0b111111010011,
    0b111111101001,
    0b001010000001,
    0b100100111000,
    0b000011001011,
    0b010111000010,
    0b000000001101,
    0b010100011111,
    0b101001010100,
    0b001110111111,
    0b111110111100,
    0b010010101011,
    0b100010000001,
    0b101001111010,
    0b111101000010,
    0b100100011101,
    0b011111010001,
    0b111111011000,
    0b110101010110,
    0b110101011011,
    0b010011110000,
    0b010000011001,
    0b011000111101,
    0b101011011000,
    0b110111101101,
    0b101010000000,
    0b101100100010,
    0b111001010111,
    0b100101010111,
    0b011101101011,
    0b011000011010,
    0b111010011101,
    0b000100011000,
    0b110111100011,
    0b001100010111,
    0b000111100100,
    0b011010000000,
    0b101010000001,
    0b010100011100,
    0b110001111001,
    0b011111010111,
    0b101111110011,
    0b101100001000,
    0b111011101001,
    0b010011001101,
    0b100001111110,
    0b000111011101,
    0b011110100010,
    0b010110010010,
    0b001110101001,
    0b001000100000,
    0b000110111110,
    0b111110011010,
    0b111100100100,
    0b010100110000,
    0b001101100100,
    0b100010111010,
    0b010000101111,
    0b100001011000,
    0b010100101100,
    0b101010011001,
    0b100111111000,
    0b001100001011,
    0b111111010000,
    0b100001111000,
    0b110010000111,
    0b000000110101,
    0b000101000100,
    0b100000101011,
    0b101100010100,
    0b100111101000,
    0b100111100001,
    0b100001100111,
    0b110001110000,
    0b001010100010,
    0b110000011010,
    0b111010111000,
    0b111100111001,
    0b011011001111,
    0b101011110111,
    0b001001010100,
    0b111110010011,
    0b111000110100,
    0b100111110101,
    0b001001001110,
    0b111000101111,
    0b011001110100,
    0b011100000110,
    0b000111010010,
    0b000111000010,
    0b111000111010,
    0b111100001110,
    0b000011111100,
    0b000111100001,
    0b110111001111,
    0b011111000100,
    0b101001000001,
    0b010001101111,
    0b001101001010,
    0b001100001100,
    0b000111001010,
    0b011010011101,
    0b000111111100,
    0b001011111110,
    0b101100101111,
    0b100010110001,
    0b101100001110,
    0b111000011001,
    0b010010000011,
    0b110000000000,
    0b111111011100,
    0b100011101010,
    0b101000000110,
    0b111111101101,
    0b001010101101,
    0b100101110011,
    0b001010111111,
    0b101001101000,
    0b100100000110,
    0b011011000011,
    0b000010110110,
    0b110110011111,
    0b100011100001,
    0b010011111100,
    0b011001101011,
    0b111001110001,
    0b111100111000,
    0b101010011111,
    0b010101111011,
    0b000001000100,
    0b110010111101,
    0b110101010101,
    0b100100100010,
    0b011000010000,
    0b111101011000,
    0b111111110101,
    0b111010100011,
    0b000100100010,
    0b001110110101,
    0b100001100110,
    0b001011000000,
    0b001110010101,
    0b010101100111,
    0b111101100111,
    0b000011110111,
    0b101000010101,
    0b000000101011,
    0b100101000111,
    0b110011001000,
    0b111101101101,
    0b111100001101,
    0b010101010100,
    0b011111001111,
    0b011010011011,
    0b001100011110,
    0b001111110101,
    0b010001010010,
    0b011010100000,
    0b100110100010,
    0b110110110001,
    0b100101000101,
    0b011101101100,
    0b111000100001,
    0b101011011010,
    0b101001100111,
    0b100000110110,
    0b101101011101,
    0b011000101110,
    0b000011011100,
    0b001010010101,
    0b010001010110,
    0b010100000100,
    0b001101100011,
    0b011110110000,
    0b101101100110,
    0b101011110000,
    0b111100111010,
    0b001101111010,
    0b011011011101,
    0b011111000111,
    0b001011000110,
    0b001110010110,
    0b110100101001,
    0b111010010010,
    0b011100101000,
    0b110100110011,
    0b111011111101,
    0b011011001011,
    0b011101101001,
    0b000101110110,
    0b111010101100,
    0b100100011001,
    0b111011101110,
    0b010001101110,
    0b010101011011,
    0b111010000110,
    0b111111111001,
    0b011011001000,
    0b110000110011,
    0b100010101001,
    0b010101100011,
    0b010011111010,
    0b101111011101,
    0b100110000111,
    0b110100100101,
    0b001000001100,
    0b001101100110,
    0b110110101111,
    0b111001011100,
    0b110110001001,
    0b010111110011,
    0b010000001010,
    0b000101100110,
    0b001011101101,
    0b001010110001,
    0b111100011111,
    0b110110100100,
    0b001001111011,
    0b010100010011,
    0b000100010011,
    0b010011010100,
    0b100011000100,
    0b001000101111,
    0b000011010001,
    0b111111001101,
    0b101011010001,
    0b011101100100,
    0b101110110100,
    0b100101100101,
    0b111000110010,
    0b010000010011,
    0b011011000010,
    0b011010011110,
    0b001000110101,
    0b011011101010,
    0b001101010101,
    0b001110110010,
    0b111100111100,
    0b011011100111,
    0b011101001101,
    0b010011011001,
    0b110100100000,
    0b110011010111,
    0b010111001100,
    0b101110101011,
    0b111001001010,
    0b010011101011,
    0b100000001010,
    0b000010101010,
    0b001110101011,
    0b000100111001,
    0b010011111011,
    0b110001001110,
    0b111111001100,
    0b011010100101,
    0b101001100010,
    0b100110000010,
    0b010001001000,
    0b111111010001,
    0b000110011110,
    0b001011011110,
    0b000111101100,
    0b000001110000,
    0b111011011010,
    0b110001001010,
    0b011110011001,
    0b001110100010,
    0b001101110110,
    0b100011011010,
    0b101000111010,
    0b010010101101,
    0b011100111000,
    0b011001100001,
    0b011100110110,
    0b111101011001,
    0b100100010000,
    0b101000001001,
    0b000000101110,
    0b001001000000,
    0b111110011000,
    0b101110100101,
    0b110010001100,
    0b110010001001,
    0b101110100110,
    0b100101000100,
    0b001010110110,
    0b000001011110,
    0b001001011111,
    0b011000001001,
    0b101001100001,
    0b100011011100,
    0b010000111111,
    0b001001010101,
    0b110011010011,
    0b010110111011,
    0b000010101001,
    0b110101101101,
    0b110101000111,
    0b111110010010,
    0b001110111101,
    0b100011110101,
    0b111000101011,
    0b110011101000,
    0b111111001000,
    0b010010111110,
    0b111001111001,
    0b100101111111,
    0b010011011000,
    0b100010010011,
    0b111110111001,
    0b100000011011,
    0b000110000100,
    0b101001001100,
    0b110101110010,
    0b010101101111,
    0b101010011010,
    0b110110110000,
    0b101100110100,
    0b110111010001,
    0b011011101111,
    0b000111110111,
    0b011000101010,
    0b001011110001,
    0b001010010001,
    0b110100110110,
    0b000101010101,
    0b101100101011,
    0b001010000110,
    0b111101010111,
    0b011011111000,
    0b011010010010,
    0b110010001110,
    0b001111100101,
    0b101101001111,
    0b011110110110,
    0b011011011011,
    0b101001100100,
    0b111001000000,
    0b010001101011,
    0b010011110101,
    0b101011000011,
    0b100010100111,
    0b100110111010,
    0b000010110101,
    0b111101010101,
    0b100100000100,
    0b101111111011,
    0b010101000111,
    0b000110001101,
    0b001101101110,
    0b011011011010,
    0b010100100001,
    0b101101110001,
    0b010010100001,
    0b011100100101,
    0b001110000011,
    0b010011011110,
    0b000100100011,
    0b110101100000,
    0b111011010110,
    0b110100111111,
    0b000101110101,
    0b110000000011,
    0b010110101101,
    0b100001011110,
    0b110110101101,
    0b001101000010,
    0b101110101000,
    0b010100101000,
    0b110001000010,
    0b111111000010,
    0b001000111101,
    0b001111111001,
    0b010100010000,
]


class MyTestCase(unittest.TestCase):
    def test_day_three_part_one_solves_example_readings_correctly(self):
        readings = [
            0b00100,
            0b11110,
            0b10110,
            0b10111,
            0b10101,
            0b01111,
            0b00111,
            0b11100,
            0b10000,
            0b11001,
            0b00010,
            0b01010
        ]

        gamma_rate, epsilon_rate = part_one(readings)

        self.assertEqual(gamma_rate, 22)
        self.assertEqual(epsilon_rate, 9)

    def test_day_three_part_one_solves_puzzle_readings_correctly(self):
        gamma_rate, epsilon_rate = part_one(_PUZZLE_READINGS)

        self.assertEqual(gamma_rate * epsilon_rate, 4191876)

    def test_day_three_part_one_returns_0_0_for_no_input(self):
        readings = [
        ]

        gamma_rate, epsilon_rate = part_one(readings)

        self.assertEqual(gamma_rate, 0)
        self.assertEqual(epsilon_rate, 0)

    def test_day_three_part_one_handles_numbers_of_different_lengths(self):
        readings = [
            0b1100,
            0b11011,
            0b1
        ]

        gamma_rate, epsilon_rate = part_one(readings)

        self.assertEqual(gamma_rate, 9)
        self.assertEqual(epsilon_rate, 22)

    def test_day_three_part_two_solves_example_readings_correctly(self):
        readings = [
            0b00100,
            0b11110,
            0b10110,
            0b10111,
            0b10101,
            0b01111,
            0b00111,
            0b11100,
            0b10000,
            0b11001,
            0b00010,
            0b01010
        ]

        oxygen_generator_rating, co2_scrubber_rating = part_two(readings)

        self.assertEqual(oxygen_generator_rating, 23)
        self.assertEqual(co2_scrubber_rating, 10)

    def test_day_three_part_two_solves_puzzle_readings_correctly(self):
        oxygen_generator_rating, co2_scrubber_rating = part_two(_PUZZLE_READINGS)

        self.assertEqual(oxygen_generator_rating * co2_scrubber_rating, 3414905)

    def test_day_three_part_two_returns_0_0_for_no_input(self):
        readings = [
        ]

        oxygen_generator_rating, co2_scrubber_rating = part_two(readings)

        self.assertEqual(oxygen_generator_rating, 0)
        self.assertEqual(co2_scrubber_rating, 0)

    def test_day_three_part_two_handles_numbers_of_different_lengths(self):
        readings = [
            0b01100,
            0b11011,
            0b00001
        ]

        oxygen_generator_rating, co2_scrubber_rating = part_two(readings)

        self.assertEqual(oxygen_generator_rating, 12)
        self.assertEqual(co2_scrubber_rating, 27)
